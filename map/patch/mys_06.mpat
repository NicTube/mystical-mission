#new:Header $Header
{
	[MainScript] $Script_Main
	[Background] 80200000
	[EntryList] $EntryList
	[EntryCount] 1
    [MapTattle] 0019000D
}

#new:EntryList $EntryList
{
	~Vec4f:Entry0
}

#new:Script_Main $Script_Main
{
	Set   *GB_WorldLocation  .Location:GoombaVillage
	Call  SetCamPerspective  ( .Cam:Default 00000003 00000019 00000010 00001000 )
	Call  SetCamBGColor      ( .Cam:Default 00000000 00000000 00000000 )
	Call  SetCamEnabled      ( .Cam:Default .True )
	Call  SetCamLeadPlayer   ( .Cam:Default .False )

    Call EnableModel ( ~Model:water1 .False )
	Call EnableGroup ( ~Model:light_ray_g .False )
	Call EnableGroup ( ~Model:inside_cube_g .False )

    Call  GetLoadType   ( *Var1 )
    If  *Var1  ==  00000001
      	Exec  EnterSavePoint
      	Exec  $Script_MakeExits
    Else
        Set	  *Var[0] $Script_MakeExits
        Exec  EnterWalk
    EndIf

    If *MYS06_WaterStonePart3 == .False
	    Exec    $PhantoCutscene
    EndIf

	Exec	$FloatingCards
	Exec	$RotatingCards

    Exec  $Script_MakeEntities

	Exec 	$Script_SetupTexturePan

	Call    MakeNpcs  ( .False $NpcGroupList_Normal )

	Exec  $Script_SetupMusic
	Return
	End
}
#new:Script $PhantoCutscene
{
	Loop
		Call GetPlayerPos ( *Var1 *Var2 *Var3 )

		If *Var1 > 240` % Marker_PhantoCutscene X coordinate
			BreakLoop
		EndIf

		Wait 1
	EndLoop

	Call DisablePlayerInput ( .True )

	Call PlaySound ( 152 ) % Button sound
	Call EnableGroup ( ~Model:light_ray_g .True )

	Wait 3
	Call SetPlayerAnimation ( 0001002A ) % MarioLookingUp
	Wait 3
    Call PlaySoundAtPlayer     ( 00000263 00000000 )
    Call ShowEmote ( 00000000 .Emote:Question 00000000 00000014 00000000 00000000 00000000 00000000 00000000 )
    Wait 1

	Wait 25`

	Call SetCamSpeed ( .Cam:Default *Fixed[0.3] )
	Call UseSettingsFrom ( .Cam:Default ~Vec3d:Marker_PhantoCamSettings )
	Call SetPanTarget ( .Cam:Default ~Vec3d:Marker_PhantoShowingUp )
    Call PanToTarget ( .Cam:Default 0 1 )

	

	Wait 50`

	Call PushSong ( .Song:CreepyToybox 0 )
	Call PlaySound ( 62 )
	Call NpcFlyTo ( 5 ~Vec3d:Marker_PhantoShowingUp 50` 0 .Easing:CosInOut )

	Wait 20`

	Call GetNpcPos ( 5 *Var1 *Var2 *Var3 )
	Add  *Var2 27`

	Call PlaySound ( 241 ) % Sparkly sounds
    Call PlayEffect    ( ~FX:Sparkles:Star *Var1 *Var2 *Var3 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	

	Wait 5`

	Call SpeakToPlayer ( 5 007A0004 007A0001 00000000 000B0132 ) % Phanto, replace text: "Roll out the cardpet!"

	Wait 15`

	Call PushSong ( .Song:PeachQuizIntro 0 )

	Call SetCamSpeed ( .Cam:Default *Fixed[1.7] )
	Call SetPanTarget ( .Cam:Default ~Vec3d:Marker_QuizShowCam )
    Call PanToTarget ( .Cam:Default 0 1 )

	Wait 5
	
	Call PlaySound ( 152 ) % Button sound
	Call EnableGroup 	( ~Model:inside_cube_g .True )
	Call EnableModel 	( ~Model:ground1 .False )

    Call  MakeItemEntity    ( .Item:WaterStone ~Vec3d:Marker_WaterStone3 .ItemSpawnMode:Fall_NeverVanish *MYS06_WaterStonePart3 )
    Set   *MapVar[B]  *Var0

	Wait  5
	Call SetPlayerAnimation ( 00010023 ) % MarioSurprised
	Wait 3
    Call PlaySoundAtPlayer     ( 00000262 00000000 )
    Call ShowEmote ( 00000000 .Emote:Exclamation 00000000 00000014 00000000 00000000 00000000 00000000 00000000 )
    Wait 2


	Call  PlaySound ( 08A ) % WOOOOO!!!
	Call  SpeakToPlayer ( 5 007A0004 007A0001 00000000 000B0133 ) % Phanto, replace text: "Roll out the cardpet!"
	Call  PlaySound ( 089 ) % background chatter

	Call SetCamSpeed ( .Cam:Default *Fixed[99.0] )
	Call SetPanTarget ( .Cam:Default ~Vec3d:Marker_PhantoShowingUp )
    Call PanToTarget ( .Cam:Default 0 1 )

	Call DisablePartnerAI ( 0 )

	Thread
		Wait 3
		Call NpcMoveTo ( .Npc:Partner 204` 0 10` )
		Wait 2
		Call InterpNpcYaw ( .Npc:Partner 90` 10` )
	EndThread

	Thread
		Call PlayerMoveTo ( 252` 0` 10` )
		Wait 2
		Call InterpPlayerYaw ( 90` 20` )
	EndThread

	Call  SpeakToPlayer ( 5 007A0004 007A0001 00000000 000B0134 ) % Phanto, replace text: "Roll out the cardpet!"

	Call SetCamSpeed ( .Cam:Default *Fixed[99.0] )
	Call SetPanTarget ( .Cam:Default ~Vec3d:Marker_QuizShowCam )
    Call PanToTarget ( .Cam:Default 0 1 )

	% Partner Responses - "What.. Mario, are you sure we're right here?"
	Call GetCurrentPartnerID ( *VarA )
	Switch *VarA
		Case == .Partner:Goombario
		Call SpeakToPlayer ( .Npc:Partner 00010008 00010001 0 000E0044 )
		Case == .Partner:Kooper
		Call SpeakToPlayer ( .Npc:Partner 00020002 00020003 0 000E0045 )
		Case == .Partner:Bombette
		Call SpeakToPlayer ( .Npc:Partner 00030018 00030001 0 000E0046 )
		Case == .Partner:Parakarry
		Call SpeakToPlayer ( .Npc:Partner 00040006 00010001 0 000B0135 )
	EndSwitch

	Call PlaySound ( 08C ) % Tension Sound

	Call SetCamSpeed ( .Cam:Default *Fixed[2.7] )
	Call SetPanTarget ( .Cam:Default ~Vec3d:Marker_QuizShowCam )
    Call PanToTarget ( .Cam:Default 0 1 )

	Call SpeakToPlayer ( 5 007A0004 007A0001 00000000 000B0136 ) % Phanto, replace text: Oh, and I may want to mention that, if you do not answer at least 3 questions correctly,
																 % this room will immediately be nicely and completely filled with water. 
																 % I'm sure you could use a shower.

	Wait 5`


	%HERE THE QUIZ STARTS

    Set *MarioQuizFails 0 % count for how often Mario failed a question
    Set *MarioQuizCorrect .False

    Call  SpeakToPlayer ( 5 007A0004 007A0001 00000000 000B0109 ) % Last Lodge Question
    Set   *Var0 0
    Set   *MarioQuizCorrect 0
    Wait  5
    Call  ShowChoice    ( 000B010A ) % Last Lodge ...
    Wait  3
    Switch  *Var0
    Case  ==  00000000
        Set   *VarB  000B010C % INCORRECT!
        Set   *MarioQuizCorrect  0
        Add   *MarioQuizFails  1 % mistake counter
    Case  ==  00000001
        Set   *VarB  000B010C % INCORRECT!
        Set   *MarioQuizCorrect  0
        Add   *MarioQuizFails  1 % mistake counter
    Case  ==  00000002
        Set   *VarB  000B010D % CORRECT!
        Set   *MarioQuizCorrect  1
    EndSwitch
    Call  CancelMessage ( )
    Wait  2`
    Call  PlaySound ( 08D ) % Answer in!
    Wait  18`
    Call  PlaySound ( 08C ) % Quiz Tension
    Call  SpeakToPlayer ( 5 007A0004 007A0001 00000000 000B010B ) % And your answer is...

    If *MarioQuizCorrect == 1
        Call PlaySound ( 08A )
    Else
        Call PlaySound ( 08B )
    EndIf

    Set *MarioQuizCorrect 0

    Call  SpeakToPlayer ( 5 007A0004 007A0001 00000000 *VarB )
    Wait  2`


    % QUESTION 2

    Call  SpeakToPlayer ( 5 007A0004 007A0001 00000000 000B0114 ) % Sacred Trio Question
    Call  ShowChoice    ( 000B0115 ) % test
    Wait  3
    Switch  *Var0
    Case  ==  00000000
        Set   *VarB  000B010E % CORRECT!
        Set   *MarioQuizCorrect  1
    Case  ==  00000001
        Set   *VarB  000B0112 % INCORRECT!
        Set   *MarioQuizCorrect 0
        Add   *MarioQuizFails  1 % mistake counter
    Case  ==  00000002
        Set   *VarB  000B0112 % INCORRECT!
        Set   *MarioQuizCorrect  0
        Add   *MarioQuizFails  1 % mistake counter
    Case  ==  00000003
        Set   *VarB  000B0112 % INCORRECT!
        Set   *MarioQuizCorrect  0
        Add   *MarioQuizFails  1 % mistake counter
    EndSwitch
    Call  PlaySound ( 08D ) % Answer in!
    Call  CancelMessage ( )
    Wait  5`
    Call  PlaySound ( 08C ) % Quiz Tension
    Call  SpeakToPlayer ( 5 007A0004 007A0001 00000000 000B010B ) % And your answer is...

    If *MarioQuizCorrect == 1
        Call PlaySound ( 08A )
    Else
        Call PlaySound ( 08B )
    EndIf

    Set *MarioQuizCorrect 0

    Call  SpeakToPlayer ( 5 007A0004 007A0001 00000000 *VarB )
    Wait  2`

    % QUESTION 3

    Call  SpeakToPlayer ( 5 007A0004 007A0001 00000000 000B0116 ) % What's something you haven't seen island?
    Set   *Var0 0
    Set   *MarioQuizCorrect 0
    Wait  5
    Call  ShowChoice    ( 000B0117 ) % Floating mushrooms
    Wait  3
    Switch  *Var0
    Case  ==  00000000
        Set   *VarB  000B0113 % INCORRECT!
        Set   *MarioQuizCorrect  0
        Add   *MarioQuizFails  1 % mistake counter
    Case  ==  00000001
        Set   *VarB  000B0113 % INCORRECT!
        Set   *MarioQuizCorrect  0
        Add   *MarioQuizFails  1 % mistake counter
    Case  ==  00000002
        Set   *VarB  000B010F % CORRECT!
        Set   *MarioQuizCorrect  1
    Case  ==  00000003
        Set   *VarB  000B0113 % INCORRECT!
        Set   *MarioQuizCorrect  0
        Add   *MarioQuizFails  1 % mistake counter
    EndSwitch
    Call  CancelMessage ( )
    Wait  2`
    Call  PlaySound ( 08D ) % Answer in!
    Wait  18`
    Call  PlaySound ( 08C ) % Quiz Tension
    Call  SpeakToPlayer ( 5 007A0004 007A0001 00000000 000B010B ) % And your answer is...

    If *MarioQuizCorrect == 1
        Call PlaySound ( 08A )
    Else
        Call PlaySound ( 08B )
    EndIf

    Set *MarioQuizCorrect 0

    Call  SpeakToPlayer ( 5 007A0004 007A0001 00000000 *VarB )

    If    *MarioQuizFails == 3
        ExecWait $WaterGameOver
    EndIf
 
    Wait  2`

    % QUESTION 4

    Call  SpeakToPlayer ( 5 007A0004 007A0001 00000000 000B0118 ) % What's something you haven't seen island?
    Set   *Var0 0
    Set   *MarioQuizCorrect 0
    Wait  5
    Call  ShowChoice    ( 000B0119 ) % Last Lodge ...
    Wait  3
    Switch  *Var0
    Case  ==  00000000
        Set   *VarB  000B010C % INCORRECT!
        Set   *MarioQuizCorrect  0
        Add   *MarioQuizFails  1 % mistake counter
    Case  ==  00000001
        Set   *VarB  000B010F % CORRECT!
        Set   *MarioQuizCorrect  1
    Case  ==  00000002
        Set   *VarB  000B010C % INCORRECT!
        Set   *MarioQuizCorrect  0
        Add   *MarioQuizFails  1 % mistake counter
    Case  ==  00000003
        Set   *VarB  000B010C % INCORRECT!
        Set   *MarioQuizCorrect  0
        Add   *MarioQuizFails  1 % mistake counter
    EndSwitch
    Call  CancelMessage ( )
    Wait  2`
    Call  PlaySound ( 08D ) % Answer in!
    Wait  18`
    Call  PlaySound ( 08C ) % Quiz Tension
    Call  SpeakToPlayer ( 5 007A0004 007A0001 00000000 000B010B ) % And your answer is...

    If *MarioQuizCorrect == 1
        Call PlaySound ( 08A )
    Else
        Call PlaySound ( 08B )
    EndIf

    Set *MarioQuizCorrect 0

    Call  SpeakToPlayer ( 5 007A0004 007A0001 00000000 *VarB )
    Wait  2`

    If    *MarioQuizFails == 3
        ExecWait $WaterGameOver
    EndIf

    % QUESTION 5

    Call  SpeakToPlayer ( 5 007A0004 007A0001 00000000 000B011A ) % Who's gonna ask the questions instead?
    Set   *Var0 0
    Set   *MarioQuizCorrect 0
    Wait  5
    Call  ShowChoice    ( 000B011B ) % Quizmaster Par T.
    Wait  3
    Switch  *Var0
    Case  ==  00000000
        Set   *VarB  000B0113 % INCORRECT!
        Set   *MarioQuizCorrect  0
        Add   *MarioQuizFails  1 % mistake counter
    Case  ==  00000001
        Set   *VarB  000B0113 % INCORRECT!
        Set   *MarioQuizCorrect  0
        Add   *MarioQuizFails  1 % mistake counter
    Case  ==  00000002
        Set   *VarB  000B0111 % CORRECT! (but first pretending to be incorrect)
        Set   *MarioQuizCorrect  1
    EndSwitch
    Call  CancelMessage ( )
    Wait  2`
    Call  PlaySound ( 08D ) % Answer in!
    Wait  18`
    Call  PlaySound ( 08C ) % Quiz Tension
    Call  SpeakToPlayer ( 5 007A0004 007A0001 00000000 000B010B ) % And your answer is...

    Call PlaySound ( 08B ) % Incorrect

    Set *MarioQuizCorrect 0

    Call  SpeakToPlayer ( 5 007A0004 007A0001 00000000 *VarB )
    If    *VarB == 000B0111
        Call PlaySound ( 08A )
        Call  SpeakToPlayer ( 5 007A0004 007A0001 00000000 000B011F )
    EndIf

    Wait  2`

    If    *MarioQuizFails == 3
        ExecWait $WaterGameOver
    EndIf


	%QUIZ ENDS

    Call  PlaySound ( 08A )
    Call  SpeakToPlayer ( 5 007A0004 007A0001 00000000 000B011C ) % SUBCONGRATS!

	Wait 10`

    Call  SetItemPos ( *MapVar[B] -335` -100` -1435` )
    Set   *Var0  00000057
    Set   *Var1  00000001
    ExecWait  $Script_ShowingItem
    Call  AddKeyItem    ( .Item:WaterStone )
    Set   *MYS06_WaterStonePart3 .True

    Wait 10`

    If *MarioQuizFails == 0
        Call  PlaySound ( 08A )
        Call  SpeakToPlayer ( 5 007A0004 007A0001 00000000 000B011E ) % And you made no mistake, so you get..

        Call  PlaySound ( 241 )
        Call  PlayEffect    ( ~FX:Sparkles:Star ~Vec3d:Marker_Porridge 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        Call  MakeItemEntity    ( .Item:SpicySoup ~Vec3d:Marker_Porridge .ItemSpawnMode:Fall_NeverVanish *MYS06_LegendaryPorridge )
    EndIf

    Call PlaySound ( 62 )
    Thread
        Wait 2
        Call SetNpcAnimation ( 5 007A0005 ) % Phanto Spinning
        Wait 1
        Call NpcFlyTo ( 5 ~Vec3d:Marker_PhantoCamSettings 50` 0 .Easing:CosInOut )
    EndThread

    

    Wait 20`
    

	Call PlaySound ( 152 ) % Button sound
    Call StopSound ( 089 ) % background chatter
	Call EnableGroup 	( ~Model:inside_cube_g .False )
	Call EnableModel 	( ~Model:ground1 .True )
    Call EnableGroup ( ~Model:light_ray_g .False )

	Call PopSong ( )

	Call PanToTarget ( .Cam:Default 0 0 )

    Wait 20`

    % Partner Responses - "What even was that? Well anyway, we got the stone."
	Call GetCurrentPartnerID ( *VarA )
	Switch *VarA
		Case == .Partner:Goombario
		Call SpeakToPlayer ( .Npc:Partner 00010008 00010001 0 000E0044 )
		Case == .Partner:Kooper
		Call SpeakToPlayer ( .Npc:Partner 00020002 00020003 0 000E0045 )
		Case == .Partner:Bombette
		Call SpeakToPlayer ( .Npc:Partner 00030018 00030001 0 000E0046 )
		Case == .Partner:Parakarry
		Call SpeakToPlayer ( .Npc:Partner 00040006 00010001 0 000B0137 )
	EndSwitch

    If   *MYS04_WaterStonePart2 == .True
        %Set *FoundLakeEntrance .True
    EndIf

	Call EnablePartnerAI ( )
	Call DisablePlayerInput ( .False )

	Return
	End
}
#new:Script $WaterGameOver
{
    Call  SpeakToPlayer ( 5 007A0004 007A0001 00000000 000B011D ) % Enjoy your bath!
        % GAME OVER
        Call EnableModel ( ~Model:water1 .True )

        Call PlaySound ( 42 )
        % Water Rising
        Thread
            Call  MakeLerp  ( 0` 200` 150` .Easing:CosInOut )
            Loop
                Call  UpdateLerp ( )
                Call  TranslateModel    ( ~Model:water1 00000000 *Var0 00000000 )
                Wait  1`
                If  *Var1  ==  00000000
                    BreakLoop
                EndIf
            EndLoop
        EndThread

        Wait 3
        Call PlaySoundAtPlayer     ( 00000262 00000000 )
        Call ShowEmote ( 00000000 .Emote:Exclamation 00000000 00000014 00000000 00000000 00000000 00000000 00000000 )
        Wait 1
        Call SetPlayerAnimation ( .PlayerAnim:Flailing ) % Mario getting scared
        Wait 20`
        Call PlaySound ( 298 )
        Wait 12`

        Call PlaySound ( 62 )
        Thread
            Wait 5
            Call SetNpcAnimation ( 5 007A0005 ) % Phanto Spinning
            Wait 4
            Call NpcFlyTo ( 5 ~Vec3d:Marker_PhantoCamSettings 50` 0 .Easing:CosInOut )
        EndThread

        Wait 5
        Call SetNpcAnimation ( .Npc:Partner 0004000D ) % Jr. Troopa scared
        Wait 4
        
        Call StopSound ( 089 )

        Call GotoMap ( "gv_01" 0 )
        Wait 200`
    Return
    End
}
#new:Script $Script_ShowingItem
{
    0:  Call  ShowGotItem   ( *Var0 .True 00000000 )
   18:  Return
   20:  Return
   28:  End
}
#new:Script $FloatingCards
{
      Loop
      If *Var3 == 0
      Add  *Var2 *Var4
      Else
      Sub  *Var2 *Var4
      EndIf  
      If   *Var2 > 10`
            Set *Var4 1
            If *Var2 > 18`
                  Set *Var3 1
                  EndIf
            Else
            If   *Var2 > -10`
                  Set *Var4 2
                  EndIf
            EndIf
      If   *Var2 < -10`
            Set *Var4 1
      EndIf
      If *Var2 < -18`
            Set *Var3 0
            EndIf
      Call TranslateModel ( ~Model:card1 0 *Var2 0 )
      Call TranslateModel ( ~Model:card2 0 *Var2 0 )
      Wait 1`
      EndLoop
      Return
      End
}
#new:Script $RotatingCards
{
    0:  SetF  *Var0  *Fixed[0.0]
   10:  Set   *Var1  0000001E
   38:  Label  0
   44:  AddF  *Var0  *Fixed[1.0]
   60:  Call  RotateModel       ( ~Model:card1 *Var0 0 1 0 )
        Call  RotateModel       ( ~Model:card2 *Var0 0 1 0 )
   80:  Wait  1`
   8C:  Sub   *Var1  00000001
   9C:  If  *Var1  >  00000000
   AC:  	Goto  0
   B8:  EndIf
   C0:  Set   *Var1  0000001E
   D0:  Call  RandInt   ( 00000064 *Var2 )
   E4:  If  *Var2  >  0000000A
   F4:  	Goto  0
  100:  EndIf
  108:  SetF  *Var2  *Fixed[1.0]
  118:  Loop  00000032
  124:  	SubF  *Var2  *Fixed[0.01]
  134:  	AddF  *Var0  *Var2
  144:  	Call  RotateModel   ( ~Model:card1 *Var0 0 1 0 )
            Call  RotateModel   ( ~Model:card2 *Var0 0 1 0 )
  164:  	Wait  1`
  170:  EndLoop
  178:  Loop  00000032
  184:  	AddF  *Var2  *Fixed[0.01]
  194:  	AddF  *Var0  *Var2
  1A4:  	Call  RotateModel   ( ~Model:card1 *Var0 0 1 0 )
            Call  RotateModel   ( ~Model:card2 *Var0 0 1 0 )
  1C4:  	Wait  1`
  1D0:  EndLoop
  1D8:  Set   *Var1  0000001E
  1E8:  Goto  0
  1F4:  Return
  1FC:  End
}
#new:Script $Script_MakeEntities
{
    Call  MakeEntity        ( .Entity:SavePoint ~Vec4d:Entity_SaveBlock 80000000 )
    Return
    End
}
#new:NpcGroupList $NpcGroupList_Normal
{
    00000001 $NpcGroup_Phanto 000D0000
	00000000 00000000 00000000
}
#new:NpcGroup $NpcGroup_Phanto
{
    00000005 $NpcSettings_Normal ~Vec3f:NPC_Phanto % -66 20 -532
    00000D09 $Script_Init_Phanto 00000000 00000000 90`
    ~NoDrops
    ~Movement:NPC_Phanto
    ~AnimationTable:NPC_Phanto % .Sprite:Bowser
    00000000 00000000 00000000 001A0008 % He's Russ T. Everyone says he's the smartest Toad  ...
}
#new:Script $Script_Init_Phanto
{
    0:  Call  BindNpcInteract   ( .Npc:Self $Script_Interact_Phanto )
   14:  Return
   1C:  End
}
#new:Script $Script_Interact_Phanto
{
90:  Return
98:  End
}
#new:NpcSettings $NpcSettings_Normal
{
	00000000 001E0018 00000000 00000000 00000000 00000000 00000000 00000000
	00000000 00000000 00630000
}
#new:Function_Init $Function_Init
{
	PUSH    RA
	LIA     A0, 800B0CF0
	LIA     A1, "kmr_tex"
	JAL     800654F0 % sprintf
	RESERVED
	CLEAR  V0
	JPOP   RA
}

#new:Script $Script_SetupMusic
{
	Call  SetMusicTrack ( 00000000 .Song:ShyGuyToybox 00000000 00000008 )
	Call  ClearAmbientSounds ( 250` )
	Return
	End
}

#new:Script $Script_Exit0
{
    Call    UseExitHeading  	( 3C ~Entry:Entry0 )
    Exec    ExitWalk
    Call    GotoMap         	( "mys_05" 1 ) % white transition
    Wait    100` 
    Return
    End
}

#new:Script $Script_MakeExits
{
	Bind  $Script_Exit0 .Trigger:FloorAbove ~Collider:deiliv 00000001 00000000
	Return
	End
}

#new:Script $Script_SetupTexturePan
{
	Call     SetTexPanner 	( ~Model:card_wall1 1 )
    Call     SetTexPanner 	( ~Model:water1 1 )
	Thread
		Set  *Var[0] 1
		Set  *Var[1] 442`
		Set  *Var[2] 0
		Set  *Var[3] 0
		Set  *Var[4] 0
		Set  *Var[5] 0
		Set  *Var[6] 0
		Set  *Var[7] 0
		Set  *Var[8] 0
		Set  *Var[9] 0
		Set  *Var[A] 0
		Set  *Var[B] 0
		Set  *Var[C] 0
		Exec $Script_TexturePan_Update
	EndThread
	Return
	End
}
#new:Script $Script_TexturePan_Update
{
    SetGroup  00000000
    If  *Var[5]  ==  00000001
        If  *Var[6]  ==  00000001
            If  *Var[7]  ==  00000001
                If  *Var[8]  ==  00000001
                    Call  $Function_TexturePan_Simple ( )
                    Return
                EndIf
            EndIf
        EndIf
    EndIf
    Call  $Function_TexturePan_Complex ( )
    Return
    End
}
#new:Function $Function_TexturePan_Simple
{
    ADDIU       SP, SP, FFE8
    SW          S0, 10 (SP)
    COPY        S0, A0
    SW          RA, 14 (SP)
    LW          V1, A8 (S0)
    LW          V0, 88 (S0)
    ADDU        V1, V1, V0
    BGEZ        V1, .o30
    SW          V1, A8 (S0)
    LUI         V0, 2
    BEQ         R0, R0, .o40
    ADDU        V0, V1, V0
    .o30
    LUI         A0, 2
    SLT         V0, A0, V1
    BEQ         V0, R0, .o44
    SUBU        V0, V1, A0
    .o40
    SW          V0, A8 (S0)
    .o44
    LW          V1, AC (S0)
    LW          V0, 8C (S0)
    ADDU        V1, V1, V0
    BGEZ        V1, .o64
    SW          V1, AC (S0)
    LUI         V0, 2
    BEQ         R0, R0, .o74
    ADDU        V0, V1, V0
    .o64
    LUI         A0, 2
    SLT         V0, A0, V1
    BEQ         V0, R0, .o78
    SUBU        V0, V1, A0
    .o74
    SW          V0, AC (S0)
    .o78
    LW          V1, B0 (S0)
    LW          V0, 90 (S0)
    ADDU        V1, V1, V0
    BGEZ        V1, .o98
    SW          V1, B0 (S0)
    LUI         V0, 2
    BEQ         R0, R0, .oA8
    ADDU        V0, V1, V0
    .o98
    LUI         A0, 2
    SLT         V0, A0, V1
    BEQ         V0, R0, .oAC
    SUBU        V0, V1, A0
    .oA8
    SW          V0, B0 (S0)
    .oAC
    LW          V1, B4 (S0)
    LW          V0, 94 (S0)
    ADDU        V1, V1, V0
    BGEZ        V1, .oCC
    SW          V1, B4 (S0)
    LUI         V0, 2
    BEQ         R0, R0, .oDC
    ADDU        V0, V1, V0
    .oCC
    LUI         A0, 2
    SLT         V0, A0, V1
    BEQ         V0, R0, .oE0
    SUBU        V0, V1, A0
    .oDC
    SW          V0, B4 (S0)
    .oE0
    LW          A0, 84 (S0)
    JAL         8011BC1C
    LW          A1, A8 (S0)
    LW          A0, 84 (S0)
    JAL         8011BC34
    LW          A1, AC (S0)
    LW          A0, 84 (S0)
    JAL         8011BC4C
    LW          A1, B0 (S0)
    LW          A0, 84 (S0)
    JAL         8011BC64
    LW          A1, B4 (S0)
    LW          RA, 14 (SP)
    LW          S0, 10 (SP)
    CLEAR       V0
    JR          RA
    ADDIU       SP, SP, 18
}
#new:Function $Function_TexturePan_Complex
{
    ADDIU       SP, SP, FFE8
    SW          S0, 10 (SP)
    COPY        S0, A0
    BEQ         A1, R0, .o24
    SW          RA, 14 (SP)
    SW          R0, 70 (S0)
    SW          R0, 74 (S0)
    SW          R0, 78 (S0)
    SW          R0, 7C (S0)
    .o24
    LW          V0, 70 (S0)
    BNE         V0, R0, .o64
    NOP
    LW          V1, A8 (S0)
    LW          V0, 88 (S0)
    ADDU        V1, V1, V0
    BGEZ        V1, .o50
    SW          V1, A8 (S0)
    LUI         V0, 2
    BEQ         R0, R0, .o60
    ADDU        V0, V1, V0
    .o50
    LUI         A0, 2
    SLT         V0, A0, V1
    BEQ         V0, R0, .o64
    SUBU        V0, V1, A0
    .o60
    SW          V0, A8 (S0)
    .o64
    LW          V0, 74 (S0)
    BNE         V0, R0, .oA4
    NOP
    LW          V1, AC (S0)
    LW          V0, 8C (S0)
    ADDU        V1, V1, V0
    BGEZ        V1, .o90
    SW          V1, AC (S0)
    LUI         V0, 2
    BEQ         R0, R0, .oA0
    ADDU        V0, V1, V0
    .o90
    LUI         A0, 2
    SLT         V0, A0, V1
    BEQ         V0, R0, .oA4
    SUBU        V0, V1, A0
    .oA0
    SW          V0, AC (S0)
    .oA4
    LW          V0, 78 (S0)
    BNE         V0, R0, .oE4
    NOP
    LW          V1, B0 (S0)
    LW          V0, 90 (S0)
    ADDU        V1, V1, V0
    BGEZ        V1, .oD0
    SW          V1, B0 (S0)
    LUI         V0, 2
    BEQ         R0, R0, .oE0
    ADDU        V0, V1, V0
    .oD0
    LUI         A0, 2
    SLT         V0, A0, V1
    BEQ         V0, R0, .oE4
    SUBU        V0, V1, A0
    .oE0
    SW          V0, B0 (S0)
    .oE4
    LW          V0, 7C (S0)
    BNE         V0, R0, .o124
    NOP
    LW          V1, B4 (S0)
    LW          V0, 94 (S0)
    ADDU        V1, V1, V0
    BGEZ        V1, .o110
    SW          V1, B4 (S0)
    LUI         V0, 2
    BEQ         R0, R0, .o120
    ADDU        V0, V1, V0
    .o110
    LUI         A0, 2
    SLT         V0, A0, V1
    BEQ         V0, R0, .o124
    SUBU        V0, V1, A0
    .o120
    SW          V0, B4 (S0)
    .o124
    LW          A0, 84 (S0)
    JAL         8011BC1C
    LW          A1, A8 (S0)
    LW          A0, 84 (S0)
    JAL         8011BC34
    LW          A1, AC (S0)
    LW          A0, 84 (S0)
    JAL         8011BC4C
    LW          A1, B0 (S0)
    LW          A0, 84 (S0)
    JAL         8011BC64
    LW          A1, B4 (S0)
    LW          V0, 70 (S0)
    LW          V1, 78 (S0)
    LW          A0, 98 (S0)
    ADDIU       V0, V0, 1
    SW          V0, 70 (S0)
    LW          V0, 74 (S0)
    ADDIU       V1, V1, 1
    SW          V1, 78 (S0)
    LW          V1, 70 (S0)
    ADDIU       V0, V0, 1
    SW          V0, 74 (S0)
    LW          V0, 7C (S0)
    SLT         V1, V1, A0
    ADDIU       V0, V0, 1
    BNE         V1, R0, .o198
    SW          V0, 7C (S0)
    SW          R0, 70 (S0)
    .o198
    LW          V0, 74 (S0)
    LW          V1, 9C (S0)
    SLT         V0, V0, V1
    BEQL        V0, R0, .o1AC
    SW          R0, 74 (S0)
    .o1AC
    LW          V0, 78 (S0)
    LW          V1, A0 (S0)
    SLT         V0, V0, V1
    BEQL        V0, R0, .o1C0
    SW          R0, 78 (S0)
    .o1C0
    LW          V0, 7C (S0)
    LW          V1, A4 (S0)
    SLT         V0, V0, V1
    BEQL        V0, R0, .o1D4
    SW          R0, 7C (S0)
    .o1D4
    LW          RA, 14 (SP)
    LW          S0, 10 (SP)
    CLEAR       V0
    JR          RA
    ADDIU       SP, SP, 18
}